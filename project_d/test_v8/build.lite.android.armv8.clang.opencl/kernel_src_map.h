
// Copyright (c) 2019 PaddlePaddle Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once
#include<map>
// ATTENTION This can only include in a .cc file.

const std::map<std::string, std::string> kernel2path_map{


  {"unstack,kHost,kFloat,kAny,def", "unstack_compute.cc"},
  {"unstack,kHost,kFloat,kAny,unstack_int32", "unstack_compute.cc"},
  {"sequence_pad,kHost,kFloat,kNCHW,def", "sequence_pad_compute.cc"},
  {"sequence_pad,kHost,kFloat,kNCHW,int32", "sequence_pad_compute.cc"},
  {"sequence_pad,kHost,kFloat,kNCHW,int64", "sequence_pad_compute.cc"},
  {"box_clip,kHost,kFloat,kNCHW,def", "box_clip_compute.cc"},
  {"polygon_box_transform,kHost,kFloat,kNCHW,def", "polygon_box_transform_compute.cc"},
  {"batch_norm,kARM,kFP16,kNCHW,def", "batch_norm_compute.cc"},
  {"batch_norm,kARM,kFloat,kNCHW,def", "batch_norm_compute.cc"},
  {"sync_batch_norm,kARM,kFloat,kNCHW,def", "batch_norm_compute.cc"},
  {"fetch,kHost,kAny,kAny,def", "fetch_compute.cc"},
  {"instance_norm,kOpenCL,kFP16,kImageDefault,ImageDefault", "instance_norm_image_compute.cc"},
  {"beam_search,kHost,kFloat,kNCHW,def", "beam_search_compute.cc"},
  {"roi_align,kHost,kFloat,kNCHW,def", "roi_align_compute.cc"},
  {"layer_norm,kARM,kFloat,kNCHW,def", "layer_norm_compute.cc"},
  {"argsort,kHost,kFloat,kAny,argsort_fp32", "argsort_compute.cc"},
  {"argsort,kHost,kFloat,kAny,argsort_int32", "argsort_compute.cc"},
  {"argsort,kHost,kFloat,kAny,argsort_int64", "argsort_compute.cc"},
  {"correlation,kHost,kFloat,kNCHW,def", "correlation_compute.cc"},
  {"multiclass_nms,kHost,kFloat,kNCHW,def", "multiclass_nms_compute.cc"},
  {"multiclass_nms2,kHost,kFloat,kNCHW,def", "multiclass_nms_compute.cc"},
  {"multiclass_nms3,kHost,kFloat,kNCHW,def", "multiclass_nms_compute.cc"},
  {"depthwise_conv2d_transpose,kARM,kFP16,kNCHW,def", "depthwise_conv_transpose_compute.cc"},
  {"depthwise_conv2d_transpose,kARM,kFloat,kNCHW,def", "depthwise_conv_transpose_compute.cc"},
  {"depthwise_conv2d_transpose,kARM,kInt8,kNCHW,fp32_out", "depthwise_conv_transpose_compute.cc"},
  {"depthwise_conv2d_transpose,kARM,kInt8,kNCHW,int8_out", "depthwise_conv_transpose_compute.cc"},
  {"fc,kARM,kFP16,kNCHW,def", "fc_compute.cc"},
  {"fc,kARM,kFloat,kNCHW,def", "fc_compute.cc"},
  {"fc,kARM,kInt8,kNCHW,int8out", "fc_compute.cc"},
  {"fc,kARM,kInt8,kNCHW,fp32out", "fc_compute.cc"},
  {"gather_nd,kHost,kAny,kAny,def", "gather_nd_compute.cc"},
  {"io_copy,kOpenCL,kAny,kAny,host_to_device", "io_copy_buffer_compute.cc"},
  {"io_copy,kOpenCL,kAny,kAny,device_to_host", "io_copy_buffer_compute.cc"},
  {"io_copy_once,kOpenCL,kAny,kAny,host_to_device", "io_copy_buffer_compute.cc"},
  {"io_copy_once,kOpenCL,kAny,kAny,device_to_host", "io_copy_buffer_compute.cc"},
  {"expand_as,kHost,kFloat,kAny,def", "expand_as_compute.cc"},
  {"expand_as,kHost,kFloat,kAny,int64", "expand_as_compute.cc"},
  {"pixel_shuffle,kHost,kFloat,kNCHW,def", "pixel_shuffle_compute.cc"},
  {"reduce_all,kHost,kFloat,kNCHW,def", "reduce_compute.cc"},
  {"reduce_any,kHost,kFloat,kNCHW,def", "reduce_compute.cc"},
  {"read_from_array,kHost,kAny,kAny,def", "read_from_array_compute.cc"},
  {"arg_max,kARM,kAny,kNCHW,fp32", "argmax_compute.cc"},
  {"arg_max,kARM,kAny,kNCHW,int64", "argmax_compute.cc"},
  {"arg_max,kARM,kAny,kNCHW,int32", "argmax_compute.cc"},
  {"arg_max,kARM,kAny,kNCHW,int16", "argmax_compute.cc"},
  {"arg_max,kARM,kAny,kNCHW,uint8", "argmax_compute.cc"},
  {"select_input,kHost,kAny,kNCHW,def", "select_input_compute.cc"},
  {"logical_xor,kHost,kAny,kAny,def", "logical_compute.cc"},
  {"logical_and,kHost,kAny,kAny,def", "logical_compute.cc"},
  {"logical_or,kHost,kAny,kAny,def", "logical_compute.cc"},
  {"logical_not,kHost,kAny,kAny,def", "logical_compute.cc"},
  {"sequence_pool,kARM,kFP16,kNCHW,def", "sequence_pool_compute.cc"},
  {"sequence_pool,kARM,kFloat,kNCHW,def", "sequence_pool_compute.cc"},
  {"greater_than,kOpenCL,kFP16,kImageDefault,def", "greater_than_image_compute.cc"},
  {"reduce_mean,kOpenCL,kFP16,kImageDefault,def", "reduce_mean_image_compute.cc"},
  {"expand,kHost,kAny,kAny,def", "expand_compute.cc"},
  {"cos,kHost,kFloat,kNCHW,def", "cos_compute.cc"},
  {"reduce_max,kOpenCL,kFP16,kImageDefault,image2d", "max_image_compute.cc"},
  {"max,kOpenCL,kFP16,kImageDefault,image2d", "max_image_compute.cc"},
  {"merge_lod_tensor,kARM,kFloat,kNCHW,def", "merge_lod_tensor_compute.cc"},
  {"conv2d_transpose,kOpenCL,kFP16,kImageDefault,image2d", "conv_transpose_image_compute.cc"},
  {"depthwise_conv2d_transpose,kOpenCL,kFP16,kImageDefault,image2d", "conv_transpose_image_compute.cc"},
  {"scatter,kARM,kFloat,kNCHW,def", "scatter_compute.cc"},
  {"write_back,kHost,kAny,kAny,write_back", "write_back_compute.cc"},
  {"lstm,kARM,kFloat,kNCHW,def", "lstm_compute.cc"},
  {"lstm,kARM,kInt8,kNCHW,def", "lstm_compute.cc"},
  {"increment,kHost,kAny,kNCHW,def", "increment_compute.cc"},
  {"retinanet_detection_output,kHost,kFloat,kNCHW,def", "retinanet_detection_output_compute.cc"},
  {"bilinear_interp,kOpenCL,kFP16,kImageDefault,ImageDefault", "bilinear_interp_image_compute.cc"},
  {"bilinear_interp_v2,kOpenCL,kFP16,kImageDefault,ImageDefault", "bilinear_interp_image_compute.cc"},
  {"pad2d,kARM,kFP16,kNCHW,def", "pad2d_compute.cc"},
  {"pad2d,kARM,kFloat,kNCHW,def", "pad2d_compute.cc"},
  {"unfold,kHost,kFloat,kNCHW,def", "unfold_compute.cc"},
  {"unfold,kHost,kFloat,kNCHW,def_int32", "unfold_compute.cc"},
  {"unfold,kHost,kFloat,kNCHW,def_int64", "unfold_compute.cc"},
  {"unfold,kHost,kInt8,kNCHW,def_int8", "unfold_compute.cc"},
  {"reduce_mean,kARM,kFloat,kNCHW,def", "reduce_mean_compute.cc"},
  {"pow,kARM,kFloat,kNCHW,def", "pow_compute.cc"},
  {"sequence_mask,kHost,kFloat,kNCHW,def", "sequence_mask_compute.cc"},
  {"sequence_mask,kHost,kFloat,kNCHW,int32", "sequence_mask_compute.cc"},
  {"sequence_mask,kHost,kFloat,kNCHW,int64", "sequence_mask_compute.cc"},
  {"reduce_sum,kARM,kFloat,kNCHW,def_int32", "reduce_sum_compute.cc"},
  {"reduce_sum,kARM,kFloat,kNCHW,def", "reduce_sum_compute.cc"},
  {"reduce_prod,kARM,kInt32,kNCHW,def", "reduce_prod_compute.cc"},
  {"reduce_prod,kARM,kFloat,kNCHW,def", "reduce_prod_compute.cc"},
  {"reduce_prod,kARM,kFloat,kNCHW,reduce_prod_i64", "reduce_prod_compute.cc"},
  {"reduce_prod,kARM,kFloat,kNCHW,int32", "reduce_prod_compute.cc"},
  {"cast,kHost,kAny,kNCHW,def", "cast_compute.cc"},
  {"density_prior_box,kHost,kFloat,kNCHW,def", "density_prior_box_compute.cc"},
  {"distribute_fpn_proposals,kHost,kFloat,kNCHW,def", "distribute_fpn_proposals_compute.cc"},
  {"crop_tensor,kHost,kFloat,kAny,def", "crop_tensor_compute.cc"},
  {"crop_tensor,kHost,kFloat,kAny,int32_precision", "crop_tensor_compute.cc"},
  {"fill_constant_batch_size_like,kHost,kAny,kNCHW,def", "fill_constant_batch_size_like_compute.cc"},
  {"scale,kOpenCL,kFP16,kImageDefault,def", "scale_image_compute.cc"},
  {"gru,kARM,kFP16,kNCHW,def", "gru_compute.cc"},
  {"gru,kARM,kFloat,kNCHW,def", "gru_compute.cc"},
  {"gru,kARM,kInt8,kNCHW,def", "gru_compute.cc"},
  {"sequence_expand,kHost,kFloat,kNCHW,def", "sequence_expand_compute.cc"},
  {"conv2d,kOpenCL,kFP16,kImageDefault,image2d", "conv_image_compute.cc"},
  {"depthwise_conv2d,kOpenCL,kFP16,kImageDefault,image2d", "conv_image_compute.cc"},
  {"conv2d,kOpenCL,kFP16,kImageDefault,image2d_pc", "conv_image_compute.cc"},
  {"depthwise_conv2d,kOpenCL,kFP16,kImageDefault,image2d_pc", "conv_image_compute.cc"},
  {"slice,kARM,kFloat,kNCHW,def", "slice_compute.cc"},
  {"slice,kARM,kFloat,kNCHW,float_i64_starts_ends", "slice_compute.cc"},
  {"slice,kARM,kFloat,kNCHW,bool_slice", "slice_compute.cc"},
  {"slice,kARM,kFloat,kNCHW,int32_slice", "slice_compute.cc"},
  {"slice,kARM,kFloat,kNCHW,def_int64", "slice_compute.cc"},
  {"strided_slice,kHost,kFloat,kNCHW,def", "strided_slice_compute.cc"},
  {"strided_slice,kHost,kInt32,kNCHW,def", "strided_slice_compute.cc"},
  {"strided_slice,kHost,kInt64,kNCHW,def", "strided_slice_compute.cc"},
  {"shape,kHost,kAny,kAny,def", "shape_compute.cc"},
  {"shape,kOpenCL,kAny,kAny,def", "shape_buffer_compute.cc"},
  {"index_select,kHost,kAny,kNCHW,fp32", "index_select_compute.cc"},
  {"index_select,kHost,kAny,kNCHW,int32", "index_select_compute.cc"},
  {"index_select,kHost,kAny,kNCHW,int16", "index_select_compute.cc"},
  {"index_select,kHost,kAny,kNCHW,int8", "index_select_compute.cc"},
  {"fill_constant,kHost,kAny,kNCHW,def", "fill_constant_compute.cc"},
  {"grid_sampler,kARM,kFloat,kNCHW,def", "grid_sampler_compute.cc"},
  {"one_hot,kHost,kAny,kAny,def", "one_hot_compute.cc"},
  {"one_hot_v2,kHost,kAny,kAny,def", "one_hot_compute.cc"},
  {"one_hot_v2,kHost,kAny,kAny,one_hot_v2_int32", "one_hot_compute.cc"},
  {"generate_proposals,kHost,kFloat,kNCHW,def", "generate_proposals_compute.cc"},
  {"clip,kARM,kFloat,kNCHW,def", "clip_compute.cc"},
  {"lrn,kARM,kFloat,kNCHW,def", "lrn_compute.cc"},
  {"layout,kOpenCL,kAny,kImageDefault,NCHW_to_ImageDefault", "layout_image_compute.cc"},
  {"layout_once,kOpenCL,kAny,kImageDefault,NCHW_to_ImageDefault", "layout_image_compute.cc"},
  {"layout,kOpenCL,kAny,kNCHW,ImageDefault_to_NCHW", "layout_image_compute.cc"},
  {"layout,kOpenCL,kAny,kImageFolder,NCHW_to_ImageFolder", "layout_image_compute.cc"},
  {"layout,kOpenCL,kAny,kNCHW,def", "layout_image_compute.cc"},
  {"layout_once,kOpenCL,kAny,kNCHW,ImageDefault_to_NCHW", "layout_image_compute.cc"},
  {"layout,kOpenCL,kAny,kImageFolder,ImageDefault_to_ImageFolder", "layout_image_compute.cc"},
  {"layout,kOpenCL,kAny,kImageDefault,ImageFolder_to_ImageDefault", "layout_image_compute.cc"},
  {"layout,kOpenCL,kAny,kNCHW,ImageFolder_to_NCHW", "layout_image_compute.cc"},
  {"crop,kHost,kFloat,kAny,def", "crop_compute.cc"},
  {"crop,kHost,kInt32,kAny,def", "crop_compute.cc"},
  {"assign,kHost,kAny,kAny,def", "assign_compute.cc"},
  {"assign,kHost,kAny,kAny,def_tensor_array", "assign_compute.cc"},
  {"rnn,kARM,kFloat,kNCHW,def", "rnn_compute.cc"},
  {"while,kHost,kAny,kAny,def", "while_compute.cc"},
  {"sequence_conv,kARM,kFP16,kNCHW,def", "sequence_conv_compute.cc"},
  {"sequence_conv,kARM,kFloat,kNCHW,def", "sequence_conv_compute.cc"},
  {"scatter_nd_add,kHost,kFloat,kNCHW,def", "scatter_nd_add_compute.cc"},
  {"scatter_nd_add,kHost,kFloat,kNCHW,float32_int64", "scatter_nd_add_compute.cc"},
  {"scatter_nd_add,kHost,kFloat,kNCHW,int32_int32", "scatter_nd_add_compute.cc"},
  {"scatter_nd_add,kHost,kFloat,kNCHW,int32_int64", "scatter_nd_add_compute.cc"},
  {"scatter_nd_add,kHost,kFloat,kNCHW,int64_int32", "scatter_nd_add_compute.cc"},
  {"scatter_nd_add,kHost,kFloat,kNCHW,int64_int64", "scatter_nd_add_compute.cc"},
  {"sequence_unpad,kHost,kFloat,kAny,float32", "sequence_unpad_compute.cc"},
  {"sequence_unpad,kHost,kFloat,kAny,int64", "sequence_unpad_compute.cc"},
  {"concat,kARM,kAny,kNCHW,def", "concat_compute.cc"},
  {"grid_sampler,kOpenCL,kFP16,kImageDefault,ImageDefault", "grid_sampler_image_compute.cc"},
  {"clip,kOpenCL,kFP16,kImageDefault,def", "clip_image_compute.cc"},
  {"matrix_nms,kHost,kFloat,kNCHW,def", "matrix_nms_compute.cc"},
  {"elementwise_add,kARM,kFP16,kNCHW,def", "elementwise_compute.cc"},
  {"fusion_elementwise_add_activation,kARM,kFP16,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_mul,kARM,kFP16,kNCHW,def", "elementwise_compute.cc"},
  {"fusion_elementwise_mul_activation,kARM,kFP16,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_sub,kARM,kFP16,kNCHW,def", "elementwise_compute.cc"},
  {"fusion_elementwise_sub_activation,kARM,kFP16,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_div,kARM,kFP16,kNCHW,def", "elementwise_compute.cc"},
  {"fusion_elementwise_div_activation,kARM,kFP16,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_add,kARM,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_add,kARM,kInt32,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_add,kARM,kInt64,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_add,kARM,kFloat,kNCHW,int32", "elementwise_compute.cc"},
  {"elementwise_add,kARM,kFloat,kNCHW,int64", "elementwise_compute.cc"},
  {"fusion_elementwise_add_activation,kARM,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_sub,kARM,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_sub,kARM,kInt32,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_sub,kARM,kFloat,kNCHW,int32", "elementwise_compute.cc"},
  {"elementwise_sub,kARM,kFloat,kNCHW,int64", "elementwise_compute.cc"},
  {"fusion_elementwise_sub_activation,kARM,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_mul,kARM,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_mul,kARM,kInt32,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_mul,kARM,kInt64,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_mul,kARM,kFloat,kNCHW,int32", "elementwise_compute.cc"},
  {"elementwise_mul,kARM,kFloat,kNCHW,int64", "elementwise_compute.cc"},
  {"fusion_elementwise_mul_activation,kARM,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"fusion_elementwise_mul_activation,kARM,kInt64,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_max,kARM,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"fusion_elementwise_max_activation,kARM,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_min,kARM,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"fusion_elementwise_min_activation,kARM,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_div,kARM,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_div,kARM,kInt32,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_div,kARM,kInt64,kNCHW,def", "elementwise_compute.cc"},
  {"fusion_elementwise_div_activation,kARM,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_mod,kARM,kInt64,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_mod,kARM,kFloat,kNCHW,int64", "elementwise_compute.cc"},
  {"elementwise_mod,kARM,kFloat,kNCHW,int32_mod", "elementwise_compute.cc"},
  {"elementwise_pow,kARM,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_pow,kARM,kInt32,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_floordiv,kARM,kInt32,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_floordiv,kARM,kInt64,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_floordiv,kARM,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_floordiv,kARM,kFloat,kNCHW,int64", "elementwise_compute.cc"},
  {"sin,kOpenCL,kFP16,kImageDefault,image2d", "trigonometric_image_compute.cc"},
  {"cos,kOpenCL,kFP16,kImageDefault,image2d", "trigonometric_image_compute.cc"},
  {"tan,kOpenCL,kFP16,kImageDefault,image2d", "trigonometric_image_compute.cc"},
  {"atan,kOpenCL,kFP16,kImageDefault,image2d", "trigonometric_image_compute.cc"},
  {"asin,kOpenCL,kFP16,kImageDefault,image2d", "trigonometric_image_compute.cc"},
  {"acos,kOpenCL,kFP16,kImageDefault,image2d", "trigonometric_image_compute.cc"},
  {"anchor_generator,kHost,kFloat,kNCHW,def", "anchor_generator_compute.cc"},
  {"shuffle_channel,kHost,kFloat,kNCHW,def", "shuffle_channel_compute.cc"},
  {"pool2d,kARM,kFP16,kNCHW,def", "pool_compute.cc"},
  {"pool2d,kARM,kFloat,kNCHW,def", "pool_compute.cc"},
  {"matmul,kARM,kFloat,kNCHW,def", "matmul_compute.cc"},
  {"matmul,kARM,kInt8,kNCHW,def", "matmul_compute.cc"},
  {"uniform_random,kHost,kAny,kAny,def", "uniform_random_compute.cc"},
  {"sin,kHost,kFloat,kNCHW,def", "sin_compute.cc"},
  {"relu,kHost,kFloat,kNCHW,def", "activation_compute.cc"},
  {"leaky_relu,kHost,kFloat,kNCHW,def", "activation_compute.cc"},
  {"relu_clipped,kHost,kFloat,kNCHW,def", "activation_compute.cc"},
  {"prelu,kHost,kFloat,kNCHW,def", "activation_compute.cc"},
  {"sigmoid,kHost,kFloat,kNCHW,def", "activation_compute.cc"},
  {"tanh,kHost,kFloat,kNCHW,def", "activation_compute.cc"},
  {"swish,kHost,kFloat,kNCHW,def", "activation_compute.cc"},
  {"relu6,kHost,kFloat,kNCHW,def", "activation_compute.cc"},
  {"log,kHost,kFloat,kNCHW,def", "activation_compute.cc"},
  {"exp,kHost,kFloat,kNCHW,def", "activation_compute.cc"},
  {"floor,kHost,kFloat,kNCHW,def", "activation_compute.cc"},
  {"hard_sigmoid,kHost,kFloat,kNCHW,def", "activation_compute.cc"},
  {"rsqrt,kHost,kFloat,kNCHW,def", "activation_compute.cc"},
  {"square,kHost,kFloat,kNCHW,def", "activation_compute.cc"},
  {"hard_swish,kHost,kFloat,kNCHW,def", "activation_compute.cc"},
  {"reciprocal,kHost,kFloat,kNCHW,def", "activation_compute.cc"},
  {"abs,kHost,kFloat,kNCHW,def", "activation_compute.cc"},
  {"thresholded_relu,kHost,kFloat,kNCHW,def", "activation_compute.cc"},
  {"elu,kHost,kFloat,kNCHW,def", "activation_compute.cc"},
  {"instance_norm,kARM,kFloat,kNCHW,def", "instance_norm_compute.cc"},
  {"negative,kARM,kFloat,kNCHW,def", "negative_compute.cc"},
  {"pixel_shuffle,kOpenCL,kFP16,kImageDefault,image2d", "pixel_shuffle_image_compute.cc"},
  {"reshape,kOpenCL,kFP16,kImageDefault,image2d", "reshape_image_compute.cc"},
  {"reshape2,kOpenCL,kFP16,kImageDefault,image2d", "reshape_image_compute.cc"},
  {"flatten,kOpenCL,kFP16,kImageDefault,image2d", "reshape_image_compute.cc"},
  {"flatten2,kOpenCL,kFP16,kImageDefault,image2d", "reshape_image_compute.cc"},
  {"collect_fpn_proposals,kHost,kFloat,kNCHW,def", "collect_fpn_proposals_compute.cc"},
  {"split_lod_tensor,kARM,kFloat,kNCHW,def", "split_lod_tensor_compute.cc"},
  {"lod_array_length,kHost,kAny,kAny,def", "lod_array_length_compute.cc"},
  {"assign_value,kHost,kAny,kNCHW,def", "assign_value_compute.cc"},
  {"arg_max,kOpenCL,kFP16,kImageDefault,def", "argmax_image_compute.cc"},
  {"softmax,kARM,kFP16,kNCHW,def", "softmax_compute.cc"},
  {"softmax,kARM,kFloat,kNCHW,def", "softmax_compute.cc"},
  {"split,kHost,kFP16,kNCHW,def", "split_compute.cc"},
  {"split,kHost,kFloat,kNCHW,def", "split_compute.cc"},
  {"split,kHost,kFloat,kNCHW,int32", "split_compute.cc"},
  {"split,kHost,kFloat,kNCHW,int64", "split_compute.cc"},
  {"split,kHost,kInt64,kNCHW,def", "split_compute.cc"},
  {"decode_bboxes,kARM,kFloat,kNCHW,def", "decode_bboxes_compute.cc"},
  {"norm,kARM,kFloat,kNCHW,def", "norm_compute.cc"},
  {"p_norm,kARM,kFloat,kNCHW,def", "norm_compute.cc"},
  {"fc,kOpenCL,kFP16,kImageFolder,image2d", "fc_image_compute.cc"},
  {"write_to_array,kHost,kAny,kAny,def", "write_to_array_compute.cc"},
  {"affine_channel,kARM,kFloat,kNCHW,def", "affine_channel_compute.cc"},
  {"tril_triu,kHost,kAny,kNCHW,float32", "tril_triu_compute.cc"},
  {"norm,kHost,kFloat,kNCHW,def", "norm_compute.cc"},
  {"p_norm,kHost,kFloat,kNCHW,def", "norm_compute.cc"},
  {"bilinear_interp,kARM,kFP16,kNCHW,def", "interpolate_compute.cc"},
  {"nearest_interp,kARM,kFP16,kNCHW,def", "interpolate_compute.cc"},
  {"bilinear_interp_v2,kARM,kFP16,kNCHW,def", "interpolate_compute.cc"},
  {"nearest_interp_v2,kARM,kFP16,kNCHW,def", "interpolate_compute.cc"},
  {"bilinear_interp,kARM,kFloat,kNCHW,def", "interpolate_compute.cc"},
  {"nearest_interp,kARM,kFloat,kNCHW,def", "interpolate_compute.cc"},
  {"bilinear_interp_v2,kARM,kFloat,kNCHW,def", "interpolate_compute.cc"},
  {"nearest_interp_v2,kARM,kFloat,kNCHW,def", "interpolate_compute.cc"},
  {"unbind,kHost,kFloat,kNCHW,def", "unbind_compute.cc"},
  {"unbind,kHost,kInt64,kNCHW,def", "unbind_compute.cc"},
  {"expand_v2,kHost,kFloat,kAny,def", "expand_v2_compute.cc"},
  {"expand_v2,kHost,kInt32,kAny,def", "expand_v2_compute.cc"},
  {"expand_v2,kHost,kFloat,kAny,def_int64", "expand_v2_compute.cc"},
  {"gather,kHost,kFloat,kNCHW,int32int32", "gather_compute.cc"},
  {"gather,kHost,kFloat,kNCHW,int64int64", "gather_compute.cc"},
  {"gather,kHost,kFloat,kNCHW,int64int32", "gather_compute.cc"},
  {"gather,kHost,kFloat,kNCHW,int32int64", "gather_compute.cc"},
  {"fill_zeros_like,kHost,kFloat,kNCHW,float32", "fill_zeros_like_compute.cc"},
  {"fill_zeros_like,kHost,kFloat,kNCHW,int32", "fill_zeros_like_compute.cc"},
  {"fill_zeros_like,kHost,kFloat,kNCHW,int64", "fill_zeros_like_compute.cc"},
  {"cumsum,kHost,kFloat,kAny,float32", "cumsum_compute.cc"},
  {"cumsum,kHost,kFloat,kAny,int32", "cumsum_compute.cc"},
  {"cumsum,kHost,kFloat,kAny,int64", "cumsum_compute.cc"},
  {"transpose,kARM,kAny,kNCHW,def", "transpose_compute.cc"},
  {"transpose2,kARM,kAny,kNCHW,def", "transpose_compute.cc"},
  {"flatten_contiguous_range,kHost,kAny,kAny,def", "flatten_compute.cc"},
  {"equal,kHost,kFloat,kAny,def", "compare_compute.cc"},
  {"equal,kHost,kInt64,kAny,def", "compare_compute.cc"},
  {"equal,kHost,kFloat,kAny,int64", "compare_compute.cc"},
  {"equal,kHost,kInt32,kAny,def", "compare_compute.cc"},
  {"equal,kHost,kFloat,kAny,int32", "compare_compute.cc"},
  {"not_equal,kHost,kFloat,kAny,def", "compare_compute.cc"},
  {"not_equal,kHost,kFloat,kAny,int32", "compare_compute.cc"},
  {"not_equal,kHost,kFloat,kAny,int64", "compare_compute.cc"},
  {"less_than,kHost,kFloat,kAny,def", "compare_compute.cc"},
  {"less_than,kHost,kInt32,kAny,def", "compare_compute.cc"},
  {"less_than,kHost,kFloat,kAny,int32", "compare_compute.cc"},
  {"less_than,kHost,kInt64,kAny,def", "compare_compute.cc"},
  {"less_than,kHost,kFloat,kAny,int64", "compare_compute.cc"},
  {"less_equal,kHost,kFloat,kAny,def", "compare_compute.cc"},
  {"less_equal,kHost,kInt64,kAny,def", "compare_compute.cc"},
  {"less_equal,kHost,kFloat,kAny,int64", "compare_compute.cc"},
  {"greater_than,kHost,kFloat,kAny,def", "compare_compute.cc"},
  {"greater_than,kHost,kFloat,kAny,bool", "compare_compute.cc"},
  {"greater_than,kHost,kInt32,kAny,def", "compare_compute.cc"},
  {"greater_than,kHost,kInt64,kAny,def", "compare_compute.cc"},
  {"greater_than,kHost,kFloat,kAny,int64", "compare_compute.cc"},
  {"greater_equal,kHost,kFloat,kAny,def", "compare_compute.cc"},
  {"greater_equal,kHost,kFloat,kAny,def_int64", "compare_compute.cc"},
  {"reverse,kHost,kAny,kNCHW,fp32", "reverse_compute.cc"},
  {"is_empty,kHost,kAny,kAny,def", "is_empty_compute.cc"},
  {"generate_proposals_v2,kHost,kFloat,kNCHW,def", "generate_proposals_v2_compute.cc"},
  {"pixel_shuffle,kARM,kFloat,kNCHW,def", "pixel_shuffle_compute.cc"},
  {"concat,kOpenCL,kFP16,kImageDefault,ImageDefault", "concat_image_compute.cc"},
  {"lookup_table_dequant,kARM,kAny,kNCHW,def", "lookup_table_dequant_compute.cc"},
  {"dropout,kARM,kFloat,kNCHW,def", "dropout_compute.cc"},
  {"roi_perspective_transform,kHost,kFloat,kNCHW,def", "roi_perspective_transform_compute.cc"},
  {"conv2d_transpose,kARM,kFP16,kNCHW,def", "conv_transpose_compute.cc"},
  {"conv2d_transpose,kARM,kFloat,kNCHW,def", "conv_transpose_compute.cc"},
  {"conv2d_transpose,kARM,kInt8,kNCHW,fp32_out", "conv_transpose_compute.cc"},
  {"conv2d_transpose,kARM,kInt8,kNCHW,int8_out", "conv_transpose_compute.cc"},
  {"group_norm,kARM,kFloat,kNCHW,def", "group_norm_compute.cc"},
  {"tensor_array_to_tensor,kHost,kAny,kNCHW,def", "tensor_array_to_tensor_compute.cc"},
  {"reduce_min,kARM,kFloat,kNCHW,def", "reduce_min_compute.cc"},
  {"reduce_min,kARM,kFloat,kNCHW,def_int64", "reduce_min_compute.cc"},
  {"unique_with_counts,kHost,kAny,kAny,def", "unique_with_counts_compute.cc"},
  {"lod_reset,kHost,kAny,kNCHW,def", "lod_reset_compute.cc"},
  {"squeeze,kHost,kAny,kAny,def", "squeeze_compute.cc"},
  {"squeeze2,kHost,kAny,kAny,def", "squeeze_compute.cc"},
  {"deformable_conv,kHost,kFloat,kNCHW,def", "deformable_conv_compute.cc"},
  {"hard_sigmoid,kARM,kFP16,kNCHW,def", "activation_extra_compute.cc"},
  {"hard_swish,kARM,kFP16,kNCHW,def", "activation_extra_compute.cc"},
  {"relu_clipped,kARM,kFloat,kNCHW,def", "activation_extra_compute.cc"},
  {"swish,kARM,kFloat,kNCHW,def", "activation_extra_compute.cc"},
  {"log,kARM,kFloat,kNCHW,def", "activation_extra_compute.cc"},
  {"exp,kARM,kFloat,kNCHW,def", "activation_extra_compute.cc"},
  {"floor,kARM,kFloat,kNCHW,def", "activation_extra_compute.cc"},
  {"hard_sigmoid,kARM,kFloat,kNCHW,def", "activation_extra_compute.cc"},
  {"sqrt,kARM,kFloat,kNCHW,def", "activation_extra_compute.cc"},
  {"rsqrt,kARM,kFloat,kNCHW,def", "activation_extra_compute.cc"},
  {"square,kARM,kFloat,kNCHW,def", "activation_extra_compute.cc"},
  {"hard_swish,kARM,kFloat,kNCHW,def", "activation_extra_compute.cc"},
  {"reciprocal,kARM,kFloat,kNCHW,def", "activation_extra_compute.cc"},
  {"abs,kARM,kFloat,kNCHW,def", "activation_extra_compute.cc"},
  {"gelu,kARM,kFloat,kNCHW,def", "activation_extra_compute.cc"},
  {"erf,kARM,kFloat,kNCHW,def", "activation_extra_compute.cc"},
  {"sign,kARM,kFloat,kNCHW,def", "activation_extra_compute.cc"},
  {"softplus,kARM,kFloat,kNCHW,def", "activation_extra_compute.cc"},
  {"mish,kARM,kFloat,kNCHW,def", "activation_extra_compute.cc"},
  {"beam_search_decode,kHost,kFloat,kNCHW,def", "beam_search_decode_compute.cc"},
  {"ctc_align,kHost,kInt64,kNCHW,def", "ctc_align_compute.cc"},
  {"ctc_align,kHost,kInt32,kNCHW,def", "ctc_align_compute.cc"},
  {"reshape,kHost,kAny,kAny,def", "reshape_compute.cc"},
  {"reshape2,kHost,kAny,kAny,def", "reshape_compute.cc"},
  {"flatten,kHost,kAny,kAny,def", "reshape_compute.cc"},
  {"flatten2,kHost,kAny,kAny,def", "reshape_compute.cc"},
  {"axpy,kARM,kFloat,kNCHW,def", "axpy_compute.cc"},
  {"conditional_block,kHost,kAny,kAny,def", "conditional_block_compute.cc"},
  {"batch_norm,kOpenCL,kFP16,kImageDefault,def", "batch_norm_image_compute.cc"},
  {"sync_batch_norm,kOpenCL,kFP16,kImageDefault,def", "batch_norm_image_compute.cc"},
  {"scale,kARM,kFloat,kNCHW,int32", "scale_compute.cc"},
  {"scale,kARM,kFloat,kNCHW,int64", "scale_compute.cc"},
  {"scale,kARM,kFP16,kNCHW,def", "scale_compute.cc"},
  {"scale,kARM,kFloat,kNCHW,def", "scale_compute.cc"},
  {"scale,kARM,kInt32,kNCHW,def", "scale_compute.cc"},
  {"scale,kARM,kInt64,kNCHW,def", "scale_compute.cc"},
  {"box_coder,kHost,kFloat,kNCHW,def", "box_coder_compute.cc"},
  {"inverse,kHost,kFloat,kNCHW,fp32", "inverse_compute.cc"},
  {"lrn,kOpenCL,kFP16,kImageDefault,ImageDefault", "lrn_image_compute.cc"},
  {"where,kHost,kAny,kAny,def", "where_compute.cc"},
  {"pool2d,kOpenCL,kFP16,kImageDefault,image2d", "pool_image_compute.cc"},
  {"sequence_softmax,kHost,kFloat,kNCHW,def", "sequence_softmax_compute.cc"},
  {"split,kOpenCL,kFP16,kImageDefault,def", "split_image_compute.cc"},
  {"arg_max,kHost,kAny,kNCHW,fp32", "argmax_compute.cc"},
  {"arg_max,kHost,kAny,kNCHW,int64", "argmax_compute.cc"},
  {"arg_max,kHost,kAny,kNCHW,int32", "argmax_compute.cc"},
  {"arg_max,kHost,kAny,kNCHW,int16", "argmax_compute.cc"},
  {"arg_max,kHost,kAny,kNCHW,uint8", "argmax_compute.cc"},
  {"yolo_box,kOpenCL,kAny,kNCHW,def", "yolo_box_buffer_compute.cc"},
  {"matmul_v2,kARM,kFloat,kNCHW,def", "matmul_v2_compute.cc"},
  {"fc,kOpenCL,kFloat,kNCHW,def", "fc_buffer_compute.cc"},
  {"fc,kOpenCL,kFloat,kNCHW,pc", "fc_buffer_compute.cc"},
  {"expand,kOpenCL,kFP16,kImageDefault,image2d", "expand_image_compute.cc"},
  {"reduce_max,kARM,kFloat,kNCHW,def", "reduce_max_compute.cc"},
  {"reduce_max,kARM,kFloat,kNCHW,i64", "reduce_max_compute.cc"},
  {"lookup_table,kARM,kAny,kNCHW,def", "lookup_table_compute.cc"},
  {"lookup_table_v2,kARM,kAny,kNCHW,def", "lookup_table_compute.cc"},
  {"calib,kARM,kFP16,kNCHW,fp16_to_fp32", "calib_compute.cc"},
  {"calib,kARM,kFP16,kNCHW,fp32_to_fp16", "calib_compute.cc"},
  {"calib_once,kARM,kFP16,kNCHW,fp16_to_fp32", "calib_compute.cc"},
  {"calib_once,kARM,kFP16,kNCHW,fp32_to_fp16", "calib_compute.cc"},
  {"calib,kARM,kInt8,kNCHW,fp32_to_int8", "calib_compute.cc"},
  {"calib,kARM,kInt32,kNCHW,int32_to_fp32", "calib_compute.cc"},
  {"calib,kARM,kInt32,kNCHW,int32_to_int64", "calib_compute.cc"},
  {"calib,kARM,kInt32,kNCHW,fp32_to_int32", "calib_compute.cc"},
  {"calib,kARM,kInt64,kNCHW,int64_to_fp32", "calib_compute.cc"},
  {"calib,kARM,kInt8,kNCHW,int8_to_fp32", "calib_compute.cc"},
  {"calib,kARM,kInt64,kNCHW,int64_to_int32", "calib_compute.cc"},
  {"calib_once,kARM,kInt8,kNCHW,fp32_to_int8", "calib_compute.cc"},
  {"calib_once,kARM,kInt8,kNCHW,int8_to_fp32", "calib_compute.cc"},
  {"calib_once,kARM,kInt64,kNCHW,int64_to_int32", "calib_compute.cc"},
  {"range,kHost,kFloat,kAny,def", "range_compute.cc"},
  {"range,kHost,kInt64,kAny,def", "range_compute.cc"},
  {"range,kHost,kInt32,kAny,def", "range_compute.cc"},
  {"range,kHost,kFloat,kAny,int32", "range_compute.cc"},
  {"range,kHost,kFloat,kAny,int64", "range_compute.cc"},
  {"shuffle_channel,kARM,kFP16,kNCHW,def", "shuffle_channel_compute.cc"},
  {"layout,kARM,kFloat,kNCHW,nchw2nhwc", "layout_compute.cc"},
  {"layout,kARM,kFloat,kNCHW,nhwc2nchw", "layout_compute.cc"},
  {"layout,kARM,kInt8,kNCHW,int8_nchw2nhwc", "layout_compute.cc"},
  {"layout,kARM,kInt8,kNCHW,int8_nhwc2nchw", "layout_compute.cc"},
  {"layout_once,kARM,kFloat,kNCHW,nchw2nhwc", "layout_compute.cc"},
  {"layout_once,kARM,kFloat,kNCHW,nhwc2nchw", "layout_compute.cc"},
  {"layout_once,kARM,kInt8,kNCHW,int8_nchw2nhwc", "layout_compute.cc"},
  {"layout_once,kARM,kInt8,kNCHW,int8_nhwc2nchw", "layout_compute.cc"},
  {"stack,kHost,kFloat,kAny,def", "stack_compute.cc"},
  {"stack,kHost,kFloat,kAny,int32_def", "stack_compute.cc"},
  {"stack,kHost,kFloat,kAny,int64_def", "stack_compute.cc"},
  {"relu,kARM,kFP16,kNCHW,def", "activation_compute.cc"},
  {"prelu,kARM,kFP16,kNCHW,def", "activation_compute.cc"},
  {"relu,kARM,kFloat,kNCHW,def", "activation_compute.cc"},
  {"leaky_relu,kARM,kFloat,kNCHW,def", "activation_compute.cc"},
  {"prelu,kARM,kFloat,kNCHW,def", "activation_compute.cc"},
  {"sigmoid,kARM,kFloat,kNCHW,def", "activation_compute.cc"},
  {"tanh,kARM,kFloat,kNCHW,def", "activation_compute.cc"},
  {"relu6,kARM,kFloat,kNCHW,def", "activation_compute.cc"},
  {"thresholded_relu,kARM,kFloat,kNCHW,def", "activation_compute.cc"},
  {"elu,kARM,kFloat,kNCHW,def", "activation_compute.cc"},
  {"yolo_box,kARM,kFP16,kNCHW,def", "yolo_box_compute.cc"},
  {"yolo_box,kHost,kFloat,kNCHW,def", "yolo_box_compute.cc"},
  {"cos_sim,kHost,kFloat,kNCHW,def", "cos_sim_compute.cc"},
  {"slice,kOpenCL,kFloat,kNCHW,def", "slice_buffer_compute.cc"},
  {"slice,kOpenCL,kInt32,kNCHW,def", "slice_buffer_compute.cc"},
  {"slice,kOpenCL,kInt64,kNCHW,def", "slice_buffer_compute.cc"},
  {"top_k_v2,kHost,kFloat,kNCHW,def", "topk_v2_compute.cc"},
  {"flip,kHost,kAny,kNCHW,flip_fp32", "flip_compute.cc"},
  {"flip,kHost,kAny,kNCHW,flip_i64", "flip_compute.cc"},
  {"pad2d,kHost,kFloat,kNCHW,def", "pad2d_compute.cc"},
  {"deformable_conv,kARM,kFloat,kNCHW,def", "deformable_conv_compute.cc"},
  {"sequence_expand_as,kARM,kFloat,kNCHW,def", "sequence_expand_as_compute.cc"},
  {"im2sequence,kARM,kFloat,kNCHW,def", "im2sequence_compute.cc"},
  {"elementwise_div,kOpenCL,kFP16,kImageDefault,def", "elementwise_image_compute.cc"},
  {"elementwise_add,kOpenCL,kFP16,kImageDefault,def", "elementwise_image_compute.cc"},
  {"elementwise_sub,kOpenCL,kFP16,kImageDefault,def", "elementwise_image_compute.cc"},
  {"elementwise_mul,kOpenCL,kFP16,kImageDefault,def", "elementwise_image_compute.cc"},
  {"elementwise_max,kOpenCL,kFP16,kImageDefault,def", "elementwise_image_compute.cc"},
  {"elementwise_min,kOpenCL,kFP16,kImageDefault,def", "elementwise_image_compute.cc"},
  {"elementwise_pow,kOpenCL,kFP16,kImageDefault,def", "elementwise_image_compute.cc"},
  {"elementwise_mod,kOpenCL,kFP16,kImageDefault,def", "elementwise_image_compute.cc"},
  {"fusion_elementwise_add_activation,kOpenCL,kFP16,kImageDefault,def", "elementwise_image_compute.cc"},
  {"fusion_elementwise_sub_activation,kOpenCL,kFP16,kImageDefault,def", "elementwise_image_compute.cc"},
  {"fusion_elementwise_mul_activation,kOpenCL,kFP16,kImageDefault,def", "elementwise_image_compute.cc"},
  {"fusion_elementwise_div_activation,kOpenCL,kFP16,kImageDefault,def", "elementwise_image_compute.cc"},
  {"gru_unit,kARM,kFloat,kNCHW,def", "gru_unit_compute.cc"},
  {"softmax,kOpenCL,kFP16,kImageFolder,def", "softmax_image_compute.cc"},
  {"sparse_conv2d,kARM,kFloat,kNCHW,def", "sparse_conv_compute.cc"},
  {"sparse_conv2d,kARM,kInt8,kNCHW,int8_fp32_out", "sparse_conv_compute.cc"},
  {"sparse_conv2d,kARM,kInt8,kNCHW,int8_int8_out", "sparse_conv_compute.cc"},
  {"box_coder,kARM,kFP16,kNCHW,def", "box_coder_compute.cc"},
  {"box_coder,kARM,kFloat,kNCHW,def", "box_coder_compute.cc"},
  {"dropout,kOpenCL,kFP16,kImageDefault,image2d", "dropout_image_compute.cc"},
  {"mean,kARM,kFloat,kNCHW,def", "mean_compute.cc"},
  {"shuffle_channel,kOpenCL,kFP16,kImageDefault,def", "shuffle_channel_image_compute.cc"},
  {"conv2d,kARM,kFP16,kNCHW,def", "conv_compute.cc"},
  {"depthwise_conv2d,kARM,kFP16,kNCHW,def", "conv_compute.cc"},
  {"conv2d,kARM,kFloat,kNCHW,def", "conv_compute.cc"},
  {"depthwise_conv2d,kARM,kFloat,kNCHW,def", "conv_compute.cc"},
  {"conv2d,kARM,kInt8,kNCHW,int8_out", "conv_compute.cc"},
  {"conv2d,kARM,kInt8,kNCHW,fp32_out", "conv_compute.cc"},
  {"depthwise_conv2d,kARM,kInt8,kNCHW,int8_out", "conv_compute.cc"},
  {"depthwise_conv2d,kARM,kInt8,kNCHW,fp32_out", "conv_compute.cc"},
  {"mul,kARM,kFloat,kNCHW,def", "mul_compute.cc"},
  {"sum,kARM,kFloat,kNCHW,sum_i32", "sum_compute.cc"},
  {"sum,kARM,kFloat,kNCHW,sum_i64", "sum_compute.cc"},
  {"sum,kARM,kFloat,kNCHW,sum_fp32", "sum_compute.cc"},
  {"squeeze,kOpenCL,kAny,kNCHW,def", "squeeze_unsqueeze_buffer_compute.cc"},
  {"squeeze2,kOpenCL,kAny,kNCHW,def", "squeeze_unsqueeze_buffer_compute.cc"},
  {"unsqueeze,kOpenCL,kAny,kNCHW,def", "squeeze_unsqueeze_buffer_compute.cc"},
  {"unsqueeze2,kOpenCL,kAny,kNCHW,def", "squeeze_unsqueeze_buffer_compute.cc"},
  {"nearest_interp,kOpenCL,kFP16,kImageDefault,ImageDefault", "nearest_interp_image_compute.cc"},
  {"nearest_interp_v2,kOpenCL,kFP16,kImageDefault,ImageDefault", "nearest_interp_image_compute.cc"},
  {"crf_decoding,kHost,kFloat,kNCHW,def", "crf_decoding_compute.cc"},
  {"feed,kHost,kAny,kAny,def", "feed_compute.cc"},
  {"unsqueeze,kHost,kAny,kAny,def", "unsqueeze_compute.cc"},
  {"unsqueeze2,kHost,kAny,kAny,def", "unsqueeze_compute.cc"},
  {"print,kHost,kAny,kAny,def", "print_compute.cc"},
  {"fill_any_like,kHost,kAny,kNCHW,def", "fill_any_like_compute.cc"},
  {"fill_zeros_like,kHost,kAny,kNCHW,def", "fill_any_like_compute.cc"},
  {"pad3d,kHost,kFloat,kNCHW,def", "pad3d_compute.cc"},
  {"transpose,kOpenCL,kFP16,kImageDefault,image2d", "transpose_image_compute.cc"},
  {"transpose2,kOpenCL,kFP16,kImageDefault,image2d", "transpose_image_compute.cc"},
  {"gather_tree,kHost,kFloat,kAny,int32", "gather_tree_compute.cc"},
  {"gather_tree,kHost,kFloat,kAny,int64", "gather_tree_compute.cc"},
  {"affine_grid,kARM,kFloat,kNCHW,def", "affine_grid_compute.cc"},
  {"linspace,kHost,kFloat,kAny,float32", "linspace_compute.cc"},
  {"linspace,kHost,kInt32,kAny,int32", "linspace_compute.cc"},
  {"matmul,kOpenCL,kFloat,kNCHW,def", "matmul_buffer_compute.cc"},
  {"matmul_v2,kOpenCL,kFloat,kNCHW,def", "matmul_buffer_compute.cc"},
  {"leaky_relu,kOpenCL,kFP16,kImageDefault,ImageDefault", "activation_image_compute.cc"},
  {"swish,kOpenCL,kFP16,kImageDefault,ImageDefault", "activation_image_compute.cc"},
  {"exp,kOpenCL,kFP16,kImageDefault,ImageDefault", "activation_image_compute.cc"},
  {"tanh,kOpenCL,kFP16,kImageDefault,ImageDefault", "activation_image_compute.cc"},
  {"relu,kOpenCL,kFP16,kImageDefault,ImageDefault", "activation_image_compute.cc"},
  {"abs,kOpenCL,kFP16,kImageDefault,def", "activation_image_compute.cc"},
  {"relu6,kOpenCL,kFP16,kImageDefault,ImageDefault", "activation_image_compute.cc"},
  {"sigmoid,kOpenCL,kFP16,kImageDefault,ImageDefault", "activation_image_compute.cc"},
  {"hard_sigmoid,kOpenCL,kFP16,kImageDefault,ImageDefault", "activation_image_compute.cc"},
  {"hard_swish,kOpenCL,kFP16,kImageDefault,def", "activation_image_compute.cc"},
  {"prelu,kOpenCL,kFP16,kImageDefault,def", "activation_image_compute.cc"},
  {"sqrt,kOpenCL,kFP16,kImageDefault,def", "activation_image_compute.cc"},
  {"rsqrt,kOpenCL,kFP16,kImageDefault,def", "activation_image_compute.cc"},
  {"square,kOpenCL,kFP16,kImageDefault,def", "activation_image_compute.cc"},
  {"top_k,kHost,kFloat,kNCHW,def", "topk_compute.cc"},
  {"pad2d,kOpenCL,kFP16,kImageDefault,ImageDefault", "pad2d_image_compute.cc"},
  {"prior_box,kHost,kFloat,kNCHW,def", "prior_box_compute.cc"},
  {"prior_box,kARM,kFP16,kNCHW,def", "prior_box_compute.cc"},
  {"box_coder,kOpenCL,kFP16,kImageDefault,ImageDefault", "box_coder_image_compute.cc"},
  {"where_index,kHost,kAny,kAny,def", "where_index_compute.cc"},
  {"gaussian_random,kHost,kFloat,kNCHW,def", "gaussian_random_compute.cc"},
  {"meshgrid,kHost,kFloat,kAny,float32", "meshgrid_compute.cc"},
  {"meshgrid,kHost,kFloat,kAny,int32", "meshgrid_compute.cc"},
  {"tile,kHost,kFloat,kNCHW,def_float", "tile_compute.cc"},
  {"tile,kHost,kInt32,kNCHW,def_int32", "tile_compute.cc"},
  {"tile,kHost,kInt64,kNCHW,def_int64", "tile_compute.cc"},
  {"tile,kHost,kFloat,kNCHW,def_int64", "tile_compute.cc"},
  {"tile,kHost,kInt8,kNCHW,def_int8", "tile_compute.cc"},
  {"tile,kHost,kFloat,kNCHW,def_bool", "tile_compute.cc"},
  {"  ", "  "}
};