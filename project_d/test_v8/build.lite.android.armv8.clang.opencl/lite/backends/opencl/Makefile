# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.10

# Default target executed when no arguments are given to make.
default_target: all

.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list


# Suppress display of executed commands.
$(VERBOSE).SILENT:


# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /opt/cmake-3.10/bin/cmake

# The command to remove a file.
RM = /opt/cmake-3.10/bin/cmake -E remove -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /Paddle-Lite

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /Paddle-Lite/build.lite.android.armv8.clang.opencl

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/opt/cmake-3.10/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache

.PHONY : rebuild_cache/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	/opt/cmake-3.10/bin/ccmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache

.PHONY : edit_cache/fast

# The main all target
all: cmake_check_build_system
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(CMAKE_COMMAND) -E cmake_progress_start /Paddle-Lite/build.lite.android.armv8.clang.opencl/CMakeFiles /Paddle-Lite/build.lite.android.armv8.clang.opencl/lite/backends/opencl/CMakeFiles/progress.marks
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f CMakeFiles/Makefile2 lite/backends/opencl/all
	$(CMAKE_COMMAND) -E cmake_progress_start /Paddle-Lite/build.lite.android.armv8.clang.opencl/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f CMakeFiles/Makefile2 lite/backends/opencl/clean
.PHONY : clean

# The main clean target
clean/fast: clean

.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f CMakeFiles/Makefile2 lite/backends/opencl/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f CMakeFiles/Makefile2 lite/backends/opencl/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
lite/backends/opencl/CMakeFiles/cl_runtime.dir/rule:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f CMakeFiles/Makefile2 lite/backends/opencl/CMakeFiles/cl_runtime.dir/rule
.PHONY : lite/backends/opencl/CMakeFiles/cl_runtime.dir/rule

# Convenience name for target.
cl_runtime: lite/backends/opencl/CMakeFiles/cl_runtime.dir/rule

.PHONY : cl_runtime

# fast build rule for target.
cl_runtime/fast:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_runtime.dir/build.make lite/backends/opencl/CMakeFiles/cl_runtime.dir/build
.PHONY : cl_runtime/fast

# Convenience name for target.
lite/backends/opencl/CMakeFiles/opencl_kernels_source_cc.dir/rule:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f CMakeFiles/Makefile2 lite/backends/opencl/CMakeFiles/opencl_kernels_source_cc.dir/rule
.PHONY : lite/backends/opencl/CMakeFiles/opencl_kernels_source_cc.dir/rule

# Convenience name for target.
opencl_kernels_source_cc: lite/backends/opencl/CMakeFiles/opencl_kernels_source_cc.dir/rule

.PHONY : opencl_kernels_source_cc

# fast build rule for target.
opencl_kernels_source_cc/fast:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/opencl_kernels_source_cc.dir/build.make lite/backends/opencl/CMakeFiles/opencl_kernels_source_cc.dir/build
.PHONY : opencl_kernels_source_cc/fast

# Convenience name for target.
lite/backends/opencl/CMakeFiles/cl_wrapper.dir/rule:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f CMakeFiles/Makefile2 lite/backends/opencl/CMakeFiles/cl_wrapper.dir/rule
.PHONY : lite/backends/opencl/CMakeFiles/cl_wrapper.dir/rule

# Convenience name for target.
cl_wrapper: lite/backends/opencl/CMakeFiles/cl_wrapper.dir/rule

.PHONY : cl_wrapper

# fast build rule for target.
cl_wrapper/fast:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_wrapper.dir/build.make lite/backends/opencl/CMakeFiles/cl_wrapper.dir/build
.PHONY : cl_wrapper/fast

# Convenience name for target.
lite/backends/opencl/CMakeFiles/cl_utility.dir/rule:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f CMakeFiles/Makefile2 lite/backends/opencl/CMakeFiles/cl_utility.dir/rule
.PHONY : lite/backends/opencl/CMakeFiles/cl_utility.dir/rule

# Convenience name for target.
cl_utility: lite/backends/opencl/CMakeFiles/cl_utility.dir/rule

.PHONY : cl_utility

# fast build rule for target.
cl_utility/fast:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_utility.dir/build.make lite/backends/opencl/CMakeFiles/cl_utility.dir/build
.PHONY : cl_utility/fast

# Convenience name for target.
lite/backends/opencl/CMakeFiles/cl_context.dir/rule:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f CMakeFiles/Makefile2 lite/backends/opencl/CMakeFiles/cl_context.dir/rule
.PHONY : lite/backends/opencl/CMakeFiles/cl_context.dir/rule

# Convenience name for target.
cl_context: lite/backends/opencl/CMakeFiles/cl_context.dir/rule

.PHONY : cl_context

# fast build rule for target.
cl_context/fast:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_context.dir/build.make lite/backends/opencl/CMakeFiles/cl_context.dir/build
.PHONY : cl_context/fast

# Convenience name for target.
lite/backends/opencl/CMakeFiles/cl_half.dir/rule:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f CMakeFiles/Makefile2 lite/backends/opencl/CMakeFiles/cl_half.dir/rule
.PHONY : lite/backends/opencl/CMakeFiles/cl_half.dir/rule

# Convenience name for target.
cl_half: lite/backends/opencl/CMakeFiles/cl_half.dir/rule

.PHONY : cl_half

# fast build rule for target.
cl_half/fast:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_half.dir/build.make lite/backends/opencl/CMakeFiles/cl_half.dir/build
.PHONY : cl_half/fast

# Convenience name for target.
lite/backends/opencl/CMakeFiles/cl_target_wrapper.dir/rule:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f CMakeFiles/Makefile2 lite/backends/opencl/CMakeFiles/cl_target_wrapper.dir/rule
.PHONY : lite/backends/opencl/CMakeFiles/cl_target_wrapper.dir/rule

# Convenience name for target.
cl_target_wrapper: lite/backends/opencl/CMakeFiles/cl_target_wrapper.dir/rule

.PHONY : cl_target_wrapper

# fast build rule for target.
cl_target_wrapper/fast:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_target_wrapper.dir/build.make lite/backends/opencl/CMakeFiles/cl_target_wrapper.dir/build
.PHONY : cl_target_wrapper/fast

# Convenience name for target.
lite/backends/opencl/CMakeFiles/cl_image_converter.dir/rule:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f CMakeFiles/Makefile2 lite/backends/opencl/CMakeFiles/cl_image_converter.dir/rule
.PHONY : lite/backends/opencl/CMakeFiles/cl_image_converter.dir/rule

# Convenience name for target.
cl_image_converter: lite/backends/opencl/CMakeFiles/cl_image_converter.dir/rule

.PHONY : cl_image_converter

# fast build rule for target.
cl_image_converter/fast:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_image_converter.dir/build.make lite/backends/opencl/CMakeFiles/cl_image_converter.dir/build
.PHONY : cl_image_converter/fast

# Convenience name for target.
lite/backends/opencl/CMakeFiles/cl_image.dir/rule:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f CMakeFiles/Makefile2 lite/backends/opencl/CMakeFiles/cl_image.dir/rule
.PHONY : lite/backends/opencl/CMakeFiles/cl_image.dir/rule

# Convenience name for target.
cl_image: lite/backends/opencl/CMakeFiles/cl_image.dir/rule

.PHONY : cl_image

# fast build rule for target.
cl_image/fast:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_image.dir/build.make lite/backends/opencl/CMakeFiles/cl_image.dir/build
.PHONY : cl_image/fast

# Convenience name for target.
lite/backends/opencl/CMakeFiles/cl_caller.dir/rule:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f CMakeFiles/Makefile2 lite/backends/opencl/CMakeFiles/cl_caller.dir/rule
.PHONY : lite/backends/opencl/CMakeFiles/cl_caller.dir/rule

# Convenience name for target.
cl_caller: lite/backends/opencl/CMakeFiles/cl_caller.dir/rule

.PHONY : cl_caller

# fast build rule for target.
cl_caller/fast:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_caller.dir/build.make lite/backends/opencl/CMakeFiles/cl_caller.dir/build
.PHONY : cl_caller/fast

cl_caller.o: cl_caller.cc.o

.PHONY : cl_caller.o

# target to build an object file
cl_caller.cc.o:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_caller.dir/build.make lite/backends/opencl/CMakeFiles/cl_caller.dir/cl_caller.cc.o
.PHONY : cl_caller.cc.o

cl_caller.i: cl_caller.cc.i

.PHONY : cl_caller.i

# target to preprocess a source file
cl_caller.cc.i:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_caller.dir/build.make lite/backends/opencl/CMakeFiles/cl_caller.dir/cl_caller.cc.i
.PHONY : cl_caller.cc.i

cl_caller.s: cl_caller.cc.s

.PHONY : cl_caller.s

# target to generate assembly for a file
cl_caller.cc.s:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_caller.dir/build.make lite/backends/opencl/CMakeFiles/cl_caller.dir/cl_caller.cc.s
.PHONY : cl_caller.cc.s

cl_context.o: cl_context.cc.o

.PHONY : cl_context.o

# target to build an object file
cl_context.cc.o:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_context.dir/build.make lite/backends/opencl/CMakeFiles/cl_context.dir/cl_context.cc.o
.PHONY : cl_context.cc.o

cl_context.i: cl_context.cc.i

.PHONY : cl_context.i

# target to preprocess a source file
cl_context.cc.i:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_context.dir/build.make lite/backends/opencl/CMakeFiles/cl_context.dir/cl_context.cc.i
.PHONY : cl_context.cc.i

cl_context.s: cl_context.cc.s

.PHONY : cl_context.s

# target to generate assembly for a file
cl_context.cc.s:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_context.dir/build.make lite/backends/opencl/CMakeFiles/cl_context.dir/cl_context.cc.s
.PHONY : cl_context.cc.s

cl_half.o: cl_half.cc.o

.PHONY : cl_half.o

# target to build an object file
cl_half.cc.o:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_half.dir/build.make lite/backends/opencl/CMakeFiles/cl_half.dir/cl_half.cc.o
.PHONY : cl_half.cc.o

cl_half.i: cl_half.cc.i

.PHONY : cl_half.i

# target to preprocess a source file
cl_half.cc.i:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_half.dir/build.make lite/backends/opencl/CMakeFiles/cl_half.dir/cl_half.cc.i
.PHONY : cl_half.cc.i

cl_half.s: cl_half.cc.s

.PHONY : cl_half.s

# target to generate assembly for a file
cl_half.cc.s:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_half.dir/build.make lite/backends/opencl/CMakeFiles/cl_half.dir/cl_half.cc.s
.PHONY : cl_half.cc.s

cl_image.o: cl_image.cc.o

.PHONY : cl_image.o

# target to build an object file
cl_image.cc.o:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_image.dir/build.make lite/backends/opencl/CMakeFiles/cl_image.dir/cl_image.cc.o
.PHONY : cl_image.cc.o

cl_image.i: cl_image.cc.i

.PHONY : cl_image.i

# target to preprocess a source file
cl_image.cc.i:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_image.dir/build.make lite/backends/opencl/CMakeFiles/cl_image.dir/cl_image.cc.i
.PHONY : cl_image.cc.i

cl_image.s: cl_image.cc.s

.PHONY : cl_image.s

# target to generate assembly for a file
cl_image.cc.s:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_image.dir/build.make lite/backends/opencl/CMakeFiles/cl_image.dir/cl_image.cc.s
.PHONY : cl_image.cc.s

cl_image_converter.o: cl_image_converter.cc.o

.PHONY : cl_image_converter.o

# target to build an object file
cl_image_converter.cc.o:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_image_converter.dir/build.make lite/backends/opencl/CMakeFiles/cl_image_converter.dir/cl_image_converter.cc.o
.PHONY : cl_image_converter.cc.o

cl_image_converter.i: cl_image_converter.cc.i

.PHONY : cl_image_converter.i

# target to preprocess a source file
cl_image_converter.cc.i:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_image_converter.dir/build.make lite/backends/opencl/CMakeFiles/cl_image_converter.dir/cl_image_converter.cc.i
.PHONY : cl_image_converter.cc.i

cl_image_converter.s: cl_image_converter.cc.s

.PHONY : cl_image_converter.s

# target to generate assembly for a file
cl_image_converter.cc.s:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_image_converter.dir/build.make lite/backends/opencl/CMakeFiles/cl_image_converter.dir/cl_image_converter.cc.s
.PHONY : cl_image_converter.cc.s

cl_runtime.o: cl_runtime.cc.o

.PHONY : cl_runtime.o

# target to build an object file
cl_runtime.cc.o:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_runtime.dir/build.make lite/backends/opencl/CMakeFiles/cl_runtime.dir/cl_runtime.cc.o
.PHONY : cl_runtime.cc.o

cl_runtime.i: cl_runtime.cc.i

.PHONY : cl_runtime.i

# target to preprocess a source file
cl_runtime.cc.i:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_runtime.dir/build.make lite/backends/opencl/CMakeFiles/cl_runtime.dir/cl_runtime.cc.i
.PHONY : cl_runtime.cc.i

cl_runtime.s: cl_runtime.cc.s

.PHONY : cl_runtime.s

# target to generate assembly for a file
cl_runtime.cc.s:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_runtime.dir/build.make lite/backends/opencl/CMakeFiles/cl_runtime.dir/cl_runtime.cc.s
.PHONY : cl_runtime.cc.s

cl_utility.o: cl_utility.cc.o

.PHONY : cl_utility.o

# target to build an object file
cl_utility.cc.o:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_utility.dir/build.make lite/backends/opencl/CMakeFiles/cl_utility.dir/cl_utility.cc.o
.PHONY : cl_utility.cc.o

cl_utility.i: cl_utility.cc.i

.PHONY : cl_utility.i

# target to preprocess a source file
cl_utility.cc.i:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_utility.dir/build.make lite/backends/opencl/CMakeFiles/cl_utility.dir/cl_utility.cc.i
.PHONY : cl_utility.cc.i

cl_utility.s: cl_utility.cc.s

.PHONY : cl_utility.s

# target to generate assembly for a file
cl_utility.cc.s:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_utility.dir/build.make lite/backends/opencl/CMakeFiles/cl_utility.dir/cl_utility.cc.s
.PHONY : cl_utility.cc.s

cl_wrapper.o: cl_wrapper.cc.o

.PHONY : cl_wrapper.o

# target to build an object file
cl_wrapper.cc.o:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_wrapper.dir/build.make lite/backends/opencl/CMakeFiles/cl_wrapper.dir/cl_wrapper.cc.o
.PHONY : cl_wrapper.cc.o

cl_wrapper.i: cl_wrapper.cc.i

.PHONY : cl_wrapper.i

# target to preprocess a source file
cl_wrapper.cc.i:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_wrapper.dir/build.make lite/backends/opencl/CMakeFiles/cl_wrapper.dir/cl_wrapper.cc.i
.PHONY : cl_wrapper.cc.i

cl_wrapper.s: cl_wrapper.cc.s

.PHONY : cl_wrapper.s

# target to generate assembly for a file
cl_wrapper.cc.s:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_wrapper.dir/build.make lite/backends/opencl/CMakeFiles/cl_wrapper.dir/cl_wrapper.cc.s
.PHONY : cl_wrapper.cc.s

opencl_kernels_source.o: opencl_kernels_source.cc.o

.PHONY : opencl_kernels_source.o

# target to build an object file
opencl_kernels_source.cc.o:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/opencl_kernels_source_cc.dir/build.make lite/backends/opencl/CMakeFiles/opencl_kernels_source_cc.dir/opencl_kernels_source.cc.o
.PHONY : opencl_kernels_source.cc.o

opencl_kernels_source.i: opencl_kernels_source.cc.i

.PHONY : opencl_kernels_source.i

# target to preprocess a source file
opencl_kernels_source.cc.i:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/opencl_kernels_source_cc.dir/build.make lite/backends/opencl/CMakeFiles/opencl_kernels_source_cc.dir/opencl_kernels_source.cc.i
.PHONY : opencl_kernels_source.cc.i

opencl_kernels_source.s: opencl_kernels_source.cc.s

.PHONY : opencl_kernels_source.s

# target to generate assembly for a file
opencl_kernels_source.cc.s:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/opencl_kernels_source_cc.dir/build.make lite/backends/opencl/CMakeFiles/opencl_kernels_source_cc.dir/opencl_kernels_source.cc.s
.PHONY : opencl_kernels_source.cc.s

target_wrapper.o: target_wrapper.cc.o

.PHONY : target_wrapper.o

# target to build an object file
target_wrapper.cc.o:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_target_wrapper.dir/build.make lite/backends/opencl/CMakeFiles/cl_target_wrapper.dir/target_wrapper.cc.o
.PHONY : target_wrapper.cc.o

target_wrapper.i: target_wrapper.cc.i

.PHONY : target_wrapper.i

# target to preprocess a source file
target_wrapper.cc.i:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_target_wrapper.dir/build.make lite/backends/opencl/CMakeFiles/cl_target_wrapper.dir/target_wrapper.cc.i
.PHONY : target_wrapper.cc.i

target_wrapper.s: target_wrapper.cc.s

.PHONY : target_wrapper.s

# target to generate assembly for a file
target_wrapper.cc.s:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(MAKE) -f lite/backends/opencl/CMakeFiles/cl_target_wrapper.dir/build.make lite/backends/opencl/CMakeFiles/cl_target_wrapper.dir/target_wrapper.cc.s
.PHONY : target_wrapper.cc.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... rebuild_cache"
	@echo "... edit_cache"
	@echo "... cl_runtime"
	@echo "... opencl_kernels_source_cc"
	@echo "... cl_wrapper"
	@echo "... cl_utility"
	@echo "... cl_context"
	@echo "... cl_half"
	@echo "... cl_target_wrapper"
	@echo "... cl_image_converter"
	@echo "... cl_image"
	@echo "... cl_caller"
	@echo "... cl_caller.o"
	@echo "... cl_caller.i"
	@echo "... cl_caller.s"
	@echo "... cl_context.o"
	@echo "... cl_context.i"
	@echo "... cl_context.s"
	@echo "... cl_half.o"
	@echo "... cl_half.i"
	@echo "... cl_half.s"
	@echo "... cl_image.o"
	@echo "... cl_image.i"
	@echo "... cl_image.s"
	@echo "... cl_image_converter.o"
	@echo "... cl_image_converter.i"
	@echo "... cl_image_converter.s"
	@echo "... cl_runtime.o"
	@echo "... cl_runtime.i"
	@echo "... cl_runtime.s"
	@echo "... cl_utility.o"
	@echo "... cl_utility.i"
	@echo "... cl_utility.s"
	@echo "... cl_wrapper.o"
	@echo "... cl_wrapper.i"
	@echo "... cl_wrapper.s"
	@echo "... opencl_kernels_source.o"
	@echo "... opencl_kernels_source.i"
	@echo "... opencl_kernels_source.s"
	@echo "... target_wrapper.o"
	@echo "... target_wrapper.i"
	@echo "... target_wrapper.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /Paddle-Lite/build.lite.android.armv8.clang.opencl && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

